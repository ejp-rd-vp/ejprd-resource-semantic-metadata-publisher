@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xs:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xs:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xs:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rml:       <http://semweb.mmlab.be/ns/rml#> .
@prefix rr:        <http://www.w3.org/ns/r2rml#> .
@prefix ql:        <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema:    <http://schema.org/> .
@prefix afrl:      <http://purl.allotrope.org/ontologies/rol#> .
@prefix sio:       <http://semanticscience.org/resource/> .
@prefix foaf:      <http://xmlns.com/foaf/0.1/> .
@prefix iao:       <http://purl.obolibrary.org/obo/> .
@prefix ex:        <http://ex.com/>.
@prefix rr:        <http://www.w3.org/ns/r2rml#>.
@prefix rml:       <http://semweb.mmlab.be/ns/rml#>.
@prefix ql:        <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd:       <http://www.w3.org/2001/XMLSchema#>.
@prefix schema:    <http://schema.org/>.
@prefix rr:        <http://www.w3.org/ns/r2rml#>.
@prefix rml:       <http://semweb.mmlab.be/ns/rml#>.
@prefix ql:        <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd:       <http://www.w3.org/2001/XMLSchema#>.
@prefix schema:    <http://schema.org/>.
@prefix dcat:      <http://www.w3.org/ns/dcat#> .
@prefix ejp:       <http://purl.org/ejp-rd/vocabulary/> .
@prefix obo:       <http://purl.obolibrary.org/obo/> .
@prefix skos:	   <http://www.w3.org/2004/02/skos/core#>.
@prefix dct:       <http://purl.org/dc/terms/>.
@base              <http://example.com/ns#>.

<#CatalogMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*]"] ;

    rr:subjectMap         [ rr:template "http://ex.com/{id}" ;
                            rr:class    dcat:Catalog ] ;


    rr:predicateObjectMap [ rr:predicate dcat:catalog ;
                            rr:objectMap [ rml:reference "catalog" ;
                                         rml:reference "catalogue"] ] ;

    rr:predicateObjectMap [ rr:predicate dcat:service ;
                            rr:objectMap [ rr:parentTriplesMap <#ServiceMapping> ] ] ;


    rr:predicateObjectMap [ rr:predicate dcat:themeTaxonomy ;
                            rr:objectMap [ rr:parentTriplesMap <#ThemesMapping> ] ] ;


    rr:predicateObjectMap [ rr:predicate dcat:hasPart ;
                            rr:objectMap [ rr:parentTriplesMap <#ResourceMapping> ] ] ;

    rr:predicateObjectMap [ rr:predicate dcat:dataset ;
                            rr:objectMap [ rr:parentTriplesMap <#DatasetMapping> ] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:homepage ;
                            rr:objectMap [ rml:reference "homepage" ] ].




<#ThemesMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*].themes.concept"] ;

    rr:subjectMap         [ rr:template "dcat:themes" ;
                            rr:class    skos:Concept ] ;


    rr:predicateObjectMap [ rr:predicate skos:inScheme;
                            rr:objectMap [ rml:reference "type" ] ] .


<#ResourceMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*].hasPart.Resource";] ;
    rr:subjectMap         [ rr:template "dcat:Resource" ;
                            rr:class    dcat:Resources ] ;

    rr:predicateObjectMap [ rr:predicate ex:accessRight ;
                            rr:objectMap [ rml:reference "accessRights" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:contactPoint ;
                            rr:objectMap [ rml:reference "contactPoint" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:conformsTo ;
                            rr:objectMap [ rml:reference "conformsTo" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:description ;
                            rr:objectMap [ rml:reference "description" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:title ;
                            rr:objectMap [ rml:reference "title" ] ] ;


    rr:predicateObjectMap [ rr:predicate ex:modificationDate ;
                            rr:objectMap [ rml:reference "modificationDate" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:language ;
                            rr:objectMap [ rml:reference "language" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:identifier ;
                            rr:objectMap [ rml:reference "identifier" ] ] ;


    rr:predicateObjectMap [ rr:predicate ex:theme ;
                            rr:objectMap [ rml:reference "theme" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:type ;
                            rr:objectMap [ rml:reference "type" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:identifier ;
                            rr:objectMap [ rml:reference "identifier" ] ] ;




    rr:predicateObjectMap [ rr:predicate ex:resourceRelation ;
                            rr:objectMap [ rml:reference "resourceRelation" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:qualifiedRelation ;
                            rr:objectMap [ rml:reference "qualifiedRelation" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:keyword ;
                            rr:objectMap [ rml:reference "keyword" ] ] ;


    rr:predicateObjectMap [ rr:predicate ex:landingPage ;
                            rr:objectMap [ rml:reference "landingPage" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:qualifiedAttribution ;
                            rr:objectMap [ rml:reference "qualifiedAttribution" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:license ;
                            rr:objectMap [ rml:reference "license" ] ] ;

    rr:predicateObjectMap [ rr:predicate ex:rights ;
                            rr:objectMap [ rml:reference "rights" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:hasPolicy ;
                            rr:objectMap [ rml:reference "hasPolicy" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:isReferencedBy ;
                            rr:objectMap [ rml:reference "isReferencedBy" ] ] ;


    rr:predicateObjectMap [ rr:predicate ex:releaseDate ;
                            rr:objectMap [ rml:reference "releaseDate" ] ];

    rr:predicateObjectMap [ rr:predicate dct:publisher ;
                            rr:predicate dct:resourceCreator ;
                            rr:objectMap [ rr:parentTriplesMap <#PersonMapping> ] ] ;

    rr:predicateObjectMap [ rr:predicate dct:publisher ;
                            rr:predicate dct:resourceCreator ;
                            rr:objectMap [ rr:parentTriplesMap <#OrganisationMapping> ] ] .













<#PersonMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*].hasPart.Resource.publisher.person" ] ;
    rr:subjectMap         [ rr:template "foaf:person" ;
                            rr:class    foaf:Agent ] ;

    rr:predicateObjectMap [ rr:predicate foaf:surname ;
                            rr:objectMap [ rml:reference "surname";
                                           rml:reference "surname";] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:firstname ;
                            rr:objectMap [ rml:reference "firstname" ] ] ;
    rr:predicateObjectMap [ rr:predicate foaf:workInfoHomepage ;
                            rr:objectMap
                                         [ rml:reference
                                                   "workInfoHomepage" ] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:emailAddress ;
                            rr:objectMap [ rml:reference "emailAddress" ] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:contactPhoneNumbe ;
                            rr:objectMap
                                         [ rml:reference
                                                   "contactPhoneNumber" ] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:officeDesignation ;
                            rr:objectMap
                                         [ rml:reference
                                                   "officeDesignation" ] ] .

<#OrganisationMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*].hasPart.Resource.publisher.organisation" ] ;
    rr:subjectMap         [ rr:template "foaf:organisation" ;
                            rr:class    foaf:Agent ] ;
    rr:predicateObjectMap [ rr:predicate foaf:OrgTitle ;
                            rr:objectMap [ rml:reference "title" ] ] ;
    rr:predicateObjectMap [ rr:predicate foaf:OrgName ;
                            rr:objectMap [ rml:reference "name" ] ] ;
    rr:predicateObjectMap [ rr:predicate foaf:OrgInfoHomepage ;
                            rr:objectMap
                                         [ rml:reference
                                                   "description" ] ] ;

    rr:predicateObjectMap [ rr:predicate ejp:location ;
                            rr:objectMap [ rr:parentTriplesMap <#LocationMapping> ] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:OrgAddress ;
                            rr:objectMap [ rml:reference "homepage" ] ] .

<#LocationMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*].hasPart.Resource.publisher.organisation.spatial.location" ;
                            rml:iterator             "$.[*].dataset.spatial.location" ] ;
    rr:subjectMap         [ rr:template "dct:Spatial" ;
                            rr:class    ejp:Location ] ;
    rr:predicateObjectMap [ rr:predicate obo:streetAddress ;
                            rr:objectMap [ rml:reference "streetAddress" ] ] ;
    rr:predicateObjectMap [ rr:predicate obo:city ;
                            rr:objectMap [ rml:reference "city" ] ] ;
    rr:predicateObjectMap [ rr:predicate sio:country ;
                            rr:objectMap [ rml:reference "country" ] ] ;
    rr:predicateObjectMap [ rr:predicate dcat:continent ;
                            rr:objectMap
                                         [ rml:reference
                                                   "continent",

                                                   "continent" ] ] ;

    rr:predicateObjectMap [ rr:predicate foaf:OrgAddress ;
                            rr:objectMap [ rml:reference "region.enum" ] ] .


<#DatasetMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator              "$.[*].dataset" ] ;
    rr:subjectMap         [ rr:template "dcat:Datasets"  ;
                            rr:class    dcat:Dataset ] ;

    rr:predicateObjectMap [ rr:predicate foaf:type ;
                            rr:objectMap [ rml:reference "type.enum" ] ];

    rr:predicateObjectMap [ rr:predicate foaf:wasGeneratedBy ;
                            rr:objectMap [ rml:reference "wasGeneratedBy" ] ];

    rr:predicateObjectMap [ rr:predicate foaf:distribution ;
                            rr:objectMap [ rml:reference "distribution" ] ];

    rr:predicateObjectMap [ rr:predicate ex:Spatial ;
                            rr:objectMap [ rr:parentTriplesMap <#LocationMapping> ] ].

<#ServiceMapping>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "A" ;
                            rml:referenceFormulation ql:JSONPath ;
                            rml:iterator             "$.[*].service" ] ;
    rr:subjectMap         [ rr:template "dcat:service" ;
                            rr:class    dcat:DataService ] ;
    rr:predicateObjectMap [ rr:predicate ex:type ;
                            rr:objectMap [ rml:reference "type" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:endpointURL ;
                            rr:objectMap [ rml:reference "endpointURL" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:endpointDescription ;
                            rr:objectMap [ rml:reference "endpointDescription" ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:catalogedResource ;
                            rr:objectMap [ rr:parentTriplesMap <#ResourceMapping> ] ] ;
    rr:predicateObjectMap [ rr:predicate ex:servesDataset ;
                            rr:objectMap [ rml:reference "servesDataset" ] ] .


